{"ast":null,"code":"var _jsxFileName = \"/Users/vinaygaddam/BuyWise/project/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './login.css';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, Link } from \"react-router-dom\";\nimport FinancialDashboard from \"./components/main\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [isLoginForm, setIsLoginForm] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [createUsername, setCreateUsername] = useState('');\n  const [createPassword, setCreatePassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const toggleForm = () => {\n    setIsLoginForm(prevState => !prevState);\n  };\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    switch (id) {\n      case \"username\":\n        setUsername(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      case \"createUsername\":\n        setCreateUsername(value);\n        break;\n      case \"createPassword\":\n        setCreatePassword(value);\n        break;\n      case \"confirmPassword\":\n        setConfirmPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isLoginForm) {\n      try {\n        await signIn(username, password);\n        console.log('success');\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        await signUpCheck();\n        console.log('success');\n        toggleForm();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  const signUpCheck = async () => {\n    try {\n      await validateUsername(createUsername);\n      validatePassword(createPassword, confirmPassword);\n      await addUser(createUsername, createPassword);\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n  const signIn = async (username, password) => {\n    if (!username.trim() || !password.trim()) {\n      throw new Error('Username or password cannot be empty');\n    }\n    try {\n      const response = await fetch(`http://localhost:5050/user/${username}/${password}`);\n      if (response.status === 404) {\n        throw new Error('Username or Password mismatch');\n      } else {\n        navigate('/FinancialDashboard');\n      }\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  };\n  const validateUsername = async username => {\n    if (!username.trim()) {\n      throw new Error('Username cannot be empty');\n    }\n    const usernamePattern = /^(?=.*[a-zA-Z])(?=.*\\d)[^\\s]{5,}$/;\n    if (!usernamePattern.test(username)) {\n      throw new Error('Username must be 5+ characters, contain at least one number, one letter, and no spaces');\n    }\n    try {\n      const response = await fetch(`http://localhost:5050/username/${username}`);\n      if (response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n    } catch (error) {\n      if (error instanceof TypeError) {\n        throw new Error('Failed to fetch username information');\n      } else if (error instanceof Error) {\n        throw new Error('Username exists in the database');\n      }\n    }\n  };\n  const validatePassword = (password, confirmPassword) => {\n    if (!password.trim()) {\n      throw new Error('Password cannot be empty');\n    }\n    const passwordPattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,14}$/;\n    if (!passwordPattern.test(password)) {\n      throw new Error('Password must be 8-14 characters, contain at least one number, one uppercase letter, one lowercase letter, one special character, and no spaces');\n    }\n    if (password !== confirmPassword) {\n      throw new Error('Passwords do not match');\n    }\n  };\n  const addUser = async (username, password) => {\n    const userData = {\n      username: username,\n      password: password,\n      groups: []\n    };\n    try {\n      const response = await fetch('http://localhost:5050/users', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add user');\n      }\n      const data = await response.json();\n      return data.user;\n    } catch (error) {\n      console.error('Error adding user:', error.message);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `title ${isLoginForm ? 'login' : 'signup'}`,\n        children: \"Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `title ${isLoginForm ? 'login' : 'signup'}`,\n        children: \"Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"slide\",\n          id: \"login\",\n          checked: isLoginForm,\n          onChange: toggleForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"slide\",\n          id: \"signup\",\n          checked: !isLoginForm,\n          onChange: toggleForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          className: `slide ${isLoginForm ? 'login' : 'signup'}`,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"signup\",\n          className: `slide ${isLoginForm ? 'login' : 'signup'}`,\n          children: \"SignUp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-tab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inner\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          className: isLoginForm ? 'login' : 'signup',\n          onSubmit: handleSubmit,\n          children: [isLoginForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Username\",\n                id: \"username\",\n                value: username,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                id: \"password\",\n                value: password,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"signup-link\",\n              children: [\"Don't have account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                onClick: toggleForm,\n                children: \"Create account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Username\",\n                id: \"createUsername\",\n                value: createUsername,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                id: \"createPassword\",\n                value: createPassword,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                id: \"confirmPassword\",\n                value: confirmPassword,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-layer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: isLoginForm ? 'Login' : 'SignUp'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), !isLoginForm]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"CFxDAsljWqm/uQZU0lT5em9fGYE=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/FinancialDashboard/:username\",\n        element: /*#__PURE__*/_jsxDEV(FinancialDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","useNavigate","Link","FinancialDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","isLoginForm","setIsLoginForm","username","setUsername","password","setPassword","createUsername","setCreateUsername","createPassword","setCreatePassword","confirmPassword","setConfirmPassword","navigate","toggleForm","prevState","handleChange","e","id","value","target","handleSubmit","preventDefault","signIn","console","log","error","signUpCheck","validateUsername","validatePassword","addUser","trim","Error","response","fetch","status","usernamePattern","test","ok","TypeError","passwordPattern","userData","groups","method","headers","body","JSON","stringify","data","json","user","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","checked","onChange","htmlFor","action","onSubmit","placeholder","required","to","onClick","_c","App","path","element","_c2","$RefreshReg$"],"sources":["/Users/vinaygaddam/BuyWise/project/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './login.css';\nimport {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    useNavigate,\n    Link\n} from \"react-router-dom\";\n\nimport FinancialDashboard from \"./components/main\";\n\nfunction LoginForm() {\n    const [isLoginForm, setIsLoginForm] = useState(true);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [createUsername, setCreateUsername] = useState('');\n    const [createPassword, setCreatePassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n\n    const navigate = useNavigate()\n\n    const toggleForm = () => {\n        setIsLoginForm(prevState => !prevState);\n    };\n\n    const handleChange = e => {\n        const { id, value } = e.target;\n        switch (id) {\n            case \"username\":\n                setUsername(value);\n                break;\n            case \"password\":\n                setPassword(value);\n                break;\n            case \"createUsername\":\n                setCreateUsername(value);\n                break;\n            case \"createPassword\":\n                setCreatePassword(value);\n                break;\n            case \"confirmPassword\":\n                setConfirmPassword(value);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        if (isLoginForm) {\n            try {\n                await signIn(username, password);\n                console.log('success');\n            } catch (error) {\n                console.log(error);\n            }\n        } else {\n            try {\n                await signUpCheck();\n                console.log('success');\n                toggleForm();\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    };\n\n    const signUpCheck = async () => {\n        try {\n            await validateUsername(createUsername);\n            validatePassword(createPassword, confirmPassword);\n            await addUser(createUsername, createPassword);\n        } catch (error) {\n            console.log(error);\n            throw error;\n        }\n    }\n\n    const signIn = async (username, password) => {\n        if (!username.trim() || !password.trim()) {\n            throw new Error('Username or password cannot be empty');\n        }\n\n        try {\n            const response = await fetch(`http://localhost:5050/user/${username}/${password}`);\n            \n            if (response.status === 404) {\n                throw new Error('Username or Password mismatch');\n            } else {\n                navigate('/FinancialDashboard')\n            }\n        } catch (error) {\n            console.log(error);\n            throw new Error(error);\n        }\n    }\n\n    const validateUsername = async username => {\n        if (!username.trim()) {\n            throw new Error('Username cannot be empty');\n        }\n\n        const usernamePattern = /^(?=.*[a-zA-Z])(?=.*\\d)[^\\s]{5,}$/;\n\n        if (!usernamePattern.test(username)) {\n            throw new Error('Username must be 5+ characters, contain at least one number, one letter, and no spaces');\n        }\n\n        try {\n            const response = await fetch(`http://localhost:5050/username/${username}`);\n            if (response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n        } catch (error) {\n            if (error instanceof TypeError) {\n                throw new Error('Failed to fetch username information');\n            } else if (error instanceof Error) {\n                throw new Error('Username exists in the database');\n            }\n        }\n    };\n\n    const validatePassword = (password, confirmPassword) => {\n        if (!password.trim()) {\n            throw new Error('Password cannot be empty');\n        }\n\n        const passwordPattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,14}$/;\n        if (!passwordPattern.test(password)) {\n            throw new Error('Password must be 8-14 characters, contain at least one number, one uppercase letter, one lowercase letter, one special character, and no spaces');\n        }\n\n        if (password !== confirmPassword) {\n            throw new Error('Passwords do not match');\n        }\n    };\n\n    const addUser = async (username, password) => {\n        const userData = {\n            username: username,\n            password: password,\n            groups: []\n        };\n\n        try {\n            const response = await fetch('http://localhost:5050/users', {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify(userData)\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to add user');\n            }\n\n            const data = await response.json();\n            return data.user;\n        } catch (error) {\n            console.error('Error adding user:', error.message);\n            throw error;\n        }\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"title-text\">\n                <div className={`title ${isLoginForm ? 'login' : 'signup'}`}>Account</div>\n                <div className={`title ${isLoginForm ? 'login' : 'signup'}`}>Account</div>\n            </div>\n            <div className=\"form-container\">\n                <div className=\"slide-controls\">\n                    <input type=\"radio\" name=\"slide\" id=\"login\" checked={isLoginForm} onChange={toggleForm} />\n                    <input type=\"radio\" name=\"slide\" id=\"signup\" checked={!isLoginForm} onChange={toggleForm} />\n                    <label htmlFor=\"login\" className={`slide ${isLoginForm ? 'login' : 'signup'}`}>Login</label>\n                    <label htmlFor=\"signup\" className={`slide ${isLoginForm ? 'login' : 'signup'}`}>SignUp</label>\n                    <div className=\"slider-tab\"></div>\n                </div>\n                <div className=\"form-inner\">\n                    <form action=\"#\" className={isLoginForm ? 'login' : 'signup'} onSubmit={handleSubmit}>\n                        {isLoginForm ? (\n                            <>\n                                <div className=\"field\">\n                                    <input type=\"text\" placeholder=\"Username\" id=\"username\" value={username} onChange={handleChange} required />\n                                </div>\n                                <div className=\"field\">\n                                    <input type=\"password\" placeholder=\"Password\" id=\"password\" value={password} onChange={handleChange} required />\n                                </div>\n                                <div className=\"signup-link\">\n                                    Don't have account? <Link to=\"#\" onClick={toggleForm}>Create account</Link>\n                                </div>\n\n                            </>\n                        ) : (\n                            <>\n                                <div className=\"field\">\n                                    <input type=\"text\" placeholder=\"Username\" id=\"createUsername\" value={createUsername} onChange={handleChange} required />\n                                </div>\n                                <div className=\"field\">\n                                    <input type=\"password\" placeholder=\"Password\" id=\"createPassword\" value={createPassword} onChange={handleChange} required />\n                                </div>\n                                <div className=\"field\">\n                                    <input type=\"password\" placeholder=\"Confirm Password\" id=\"confirmPassword\" value={confirmPassword} onChange={handleChange} required />\n                                </div>\n                            </>\n                        )}\n                        <div className=\"field btn\">\n                            <div className=\"btn-layer\"></div>\n                            <input type=\"submit\" value={isLoginForm ? 'Login' : 'SignUp'} />\n                        </div>\n                        {!isLoginForm}\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<LoginForm />} />\n                <Route path=\"/FinancialDashboard/:username\" element={<FinancialDashboard />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}