{"ast":null,"code":"var _jsxFileName = \"/Users/vinaygaddam/BuyWise/project/frontend/src/Withdraw.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './Withdraw.css'; // Ensure that the path to your CSS file is correct\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Withdraw() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    username,\n    groupID,\n    balance,\n    groupName\n  } = useParams();\n  const amountRef = useRef(null);\n  // You would add state and event handlers here as needed\n  const handleBack = () => {\n    navigate(-1);\n  };\n  const handleWithdraw = async e => {\n    e.preventDefault();\n    try {\n      await withdraw(amountRef.current.value, groupID);\n      console.log(\"success\");\n      navigate(`../home/${username}/${groupID}/${parseFloat(balance) - parseFloat(amountRef.current.value)}/${groupName}`);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const withdraw = async (withdrawAmount, groupID) => {\n    if (withdrawAmount < 0) {\n      throw new Error(\"Value cannot be negative\");\n    }\n    let data = null;\n    try {\n      const data = await fetch(`http://localhost:5050/find/user/group/${groupID}`);\n      const json = await data.json();\n      const initialBalance = parseFloat(json.groups[0].balance);\n      if (initialBalance < parseFloat(withdrawAmount)) {\n        throw new Error(\"Not enough balance in your account\");\n      }\n      console.log(json);\n      try {\n        const response = await fetch(`http://localhost:5050/update/balance/${json.groups[0]._id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            \"balance\": initialBalance - parseFloat(withdrawAmount)\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Deposit unsuccessful\");\n        }\n      } catch (error) {\n        console.log(error);\n        throw new Error(error);\n      }\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"withdraw-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"withdraw-event\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"withdraw-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"withdraw-amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"withdraw-amount\",\n            name: \"withdraw-amount\",\n            ref: amountRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"withdraw-button\",\n          onClick: handleWithdraw,\n          children: [\"Withdraw from account \", groupName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Withdraw, \"YGHrf7AGXjwv6SFkz/BNLrPlvlU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Withdraw;\nexport default Withdraw;\nvar _c;\n$RefreshReg$(_c, \"Withdraw\");","map":{"version":3,"names":["React","useRef","useNavigate","useParams","jsxDEV","_jsxDEV","Withdraw","_s","navigate","username","groupID","balance","groupName","amountRef","handleBack","handleWithdraw","e","preventDefault","withdraw","current","value","console","log","parseFloat","error","withdrawAmount","Error","data","fetch","json","initialBalance","groups","response","_id","method","headers","body","JSON","stringify","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","ref","required","onClick","_c","$RefreshReg$"],"sources":["/Users/vinaygaddam/BuyWise/project/frontend/src/Withdraw.js"],"sourcesContent":["import React , { useRef } from 'react';\nimport './Withdraw.css'; // Ensure that the path to your CSS file is correct\nimport { useNavigate , useParams } from 'react-router-dom';\n\nfunction Withdraw() {\n    const navigate = useNavigate();\n    const { username , groupID , balance , groupName } = useParams();\n    const amountRef = useRef(null);\n    // You would add state and event handlers here as needed\n    const handleBack = () => {\n      navigate(-1);\n    };\n\n    const handleWithdraw = async e => {\n      e.preventDefault();\n      try {\n        await withdraw(amountRef.current.value , groupID);\n        console.log(\"success\");\n        navigate(`../home/${username}/${groupID}/${parseFloat(balance) - parseFloat(amountRef.current.value)}/${groupName}`);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    const withdraw = async (withdrawAmount, groupID) => {\n\n      if (withdrawAmount < 0){\n          throw new Error(\"Value cannot be negative\");\n      }\n      let data = null;\n      \n      try {  \n          const data = await fetch(`http://localhost:5050/find/user/group/${groupID}`);\n          const json = await data.json();\n          const initialBalance = parseFloat(json.groups[0].balance);\n          if (initialBalance < parseFloat(withdrawAmount)){\n            throw new Error(\"Not enough balance in your account\");\n        }\n          console.log(json);\n          try {\n              const response = await fetch(`http://localhost:5050/update/balance/${json.groups[0]._id}`, {\n                  method : \"PATCH\",\n                  headers : {\n                      \"Content-type\" : \"application/json\"\n                  },\n                  body: JSON.stringify({\n                      \"balance\" : initialBalance - parseFloat(withdrawAmount)\n                  })\n              });\n              if (!response.ok){\n                  throw new Error(\"Deposit unsuccessful\");\n              }\n          } catch (error) {\n              console.log(error);\n              throw new Error(error);\n          }\n         \n      } catch (error) {\n          throw new Error(error);\n      }\n  };\n  \n\n  return (\n    <div className=\"withdraw-wrapper\">\n      <div className=\"withdraw-event\">\n        <h2>Withdraw</h2>\n        <form className=\"withdraw-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"withdraw-amount\">Amount</label>\n            <input type=\"number\" id=\"withdraw-amount\" name=\"withdraw-amount\" ref={amountRef} required />\n          </div>\n          <button type=\"submit\" className=\"withdraw-button\" onClick={handleWithdraw} >Withdraw from account {groupName} </button>\n        </form>\n        <button className=\"back-btn\" onClick={handleBack}>Back</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Withdraw;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}