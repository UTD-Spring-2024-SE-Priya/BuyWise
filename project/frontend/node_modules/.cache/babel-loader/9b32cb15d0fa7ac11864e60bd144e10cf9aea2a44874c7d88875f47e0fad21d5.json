{"ast":null,"code":"var _jsxFileName = \"/Users/vinaygaddam/BuyWise/project/frontend/src/Deposit.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './Deposit.css'; // Ensure that the path to your CSS file is correct\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Deposit() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    groupID\n  } = useParams();\n  const amountRef = useRef(null);\n  // You would add state and event handlers here as needed\n  const handleBack = () => {\n    navigate(-1);\n  };\n  const handleDeposit = async (depositAmount, groupID) => {\n    try {\n      await deposit(depositAmount, groupID);\n    } catch (error) {}\n  };\n  const deposit = async (depositAmount, groupID) => {\n    console.log(depositAmount);\n    console.log(groupID);\n    // Check if depositAmount is null or empty\n    if (!depositAmount) {\n      console.log(\"Value cannot be empty\");\n    }\n    if (depositAmount < 0) {\n      console.log(\"Value cannot be negative\");\n    }\n    let data = null;\n    try {\n      const data = await fetch(`http://localhost:5050/find/user/group/${groupID}`);\n      const json = await data.json();\n      const initialBalance = parseFloat(json.groups[0].balance);\n      if (initialBalance < parseFloat(depositAmount)) {\n        console.log(\"Not enough balance in your account\");\n      }\n      try {\n        const response = await fetch(`http://localhost:5050/update/balance/${json.groups[0]._id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            \"balance\": initialBalance + parseFloat(depositAmount)\n          })\n        });\n        if (!response.ok) {\n          console.log(\"Deposit unsuccessful\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"deposit-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deposit-event\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"deposit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"amount\",\n            name: \"amount\",\n            ref: amountRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"deposit-button\",\n          onClick: () => deposit(amountRef, groupID),\n          children: \"Add Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Deposit, \"WveDppskwxqKGQCUQD8sKjz7qfA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Deposit;\nexport default Deposit;\nvar _c;\n$RefreshReg$(_c, \"Deposit\");","map":{"version":3,"names":["React","useRef","useNavigate","useParams","jsxDEV","_jsxDEV","Deposit","_s","navigate","groupID","amountRef","handleBack","handleDeposit","depositAmount","deposit","error","console","log","data","fetch","json","initialBalance","parseFloat","groups","balance","response","_id","method","headers","body","JSON","stringify","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","ref","required","onClick","_c","$RefreshReg$"],"sources":["/Users/vinaygaddam/BuyWise/project/frontend/src/Deposit.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport './Deposit.css'; // Ensure that the path to your CSS file is correct\nimport { useNavigate , useParams } from 'react-router-dom';\n\nfunction Deposit() {\n    const navigate = useNavigate();\n    const { groupID } = useParams();\n    const amountRef = useRef(null);\n  // You would add state and event handlers here as needed\n  const handleBack = () => {\n    navigate(-1);\n  };\n\n  const handleDeposit = async (depositAmount , groupID) => {\n    try {\n      await deposit(depositAmount , groupID);\n    } catch (error) {\n      \n    }\n  }\n\n  const deposit = async (depositAmount, groupID) => {\n    console.log(depositAmount);\n    console.log(groupID);\n    // Check if depositAmount is null or empty\n    if (!depositAmount) {\n        console.log(\"Value cannot be empty\");\n    }\n\n    if (depositAmount < 0){\n      console.log(\"Value cannot be negative\");\n    }\n    let data = null;\n\n    \n    try {  \n        const data = await fetch(`http://localhost:5050/find/user/group/${groupID}`);\n        const json = await data.json();\n        const initialBalance = parseFloat(json.groups[0].balance);\n        if (initialBalance < parseFloat(depositAmount)){\n          console.log(\"Not enough balance in your account\");\n        }\n        try {\n            const response = await fetch(`http://localhost:5050/update/balance/${json.groups[0]._id}`, {\n                method : \"PATCH\",\n                headers : {\n                    \"Content-type\" : \"application/json\"\n                },\n                body: JSON.stringify({\n                    \"balance\" : initialBalance + parseFloat(depositAmount)\n                })\n            });\n            if (!response.ok){\n              console.log(\"Deposit unsuccessful\");\n            }\n        } catch (error) {\n            console.log(error);\n        }\n       \n    } catch (error) {\n      console.log(error);\n    }\n};\n\n\n\n  return (\n    <div className=\"deposit-wrapper\">\n      <div className=\"deposit-event\">\n        <h2>Deposit</h2>\n        <form className=\"deposit-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input type=\"number\" id=\"amount\" name=\"amount\" ref={amountRef} required />\n          </div>\n          <button type=\"submit\" className=\"deposit-button\" onClick={() => deposit(amountRef , groupID)}>Add Deposit</button>\n        </form>\n        <button className=\"back-btn\" onClick={handleBack}>Back</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Deposit;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}